{"ast":null,"code":"import { api } from '../features';\nimport authReducer from '../features/authSlice';\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, PURGE, REGISTER, PERSIST } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  version: 1,\n  blacklist: ['api'],\n  stateReconciler: autoMergeLevel2\n};\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  [api.reducerPath]: api.reducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [REGISTER, PERSIST, PURGE]\n    }\n  }).concat(api.middleware)\n});\nexport default store;","map":{"version":3,"names":["api","authReducer","combineReducers","configureStore","storage","persistReducer","PURGE","REGISTER","PERSIST","autoMergeLevel2","persistConfig","key","version","blacklist","stateReconciler","rootReducer","auth","reducerPath","reducer","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat"],"sources":["/Users/daryn/Desktop/Project/Kanat_CRM/NEW_Kanat_Shops/frontend/src/Store/store.ts"],"sourcesContent":["import { api } from '../features';\nimport authReducer from '../features/authSlice';\nimport { AnyAction, combineReducers, configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, PURGE, REGISTER, PERSIST } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n\tversion: 1,\n\tblacklist: ['api'],\n\tstateReconciler: autoMergeLevel2,\n};\n\nconst rootReducer = combineReducers({\n\tauth: authReducer,\n\t[api.reducerPath]: api.reducer,\n});\n\nconst persistedReducer = persistReducer<any, AnyAction>(\n\tpersistConfig,\n\trootReducer,\n);\n\nconst store = configureStore({\n\treducer: persistedReducer,\n\tmiddleware: (getDefaultMiddleware) =>\n\t\tgetDefaultMiddleware({\n\t\t\tserializableCheck: {\n\t\t\t\tignoredActions: [REGISTER, PERSIST, PURGE],\n\t\t\t},\n\t\t}).concat(api.middleware),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof store.dispatch;\nexport default store;\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,aAAa;AACjC,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,SAAoBC,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAC7E,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,cAAc,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,eAAe;AACxE,OAAOC,eAAe,MAAM,kDAAkD;AAE9E,MAAMC,aAAa,GAAG;EACrBC,GAAG,EAAE,MAAM;EACXP,OAAO;EACPQ,OAAO,EAAE,CAAC;EACVC,SAAS,EAAE,CAAC,KAAK,CAAC;EAClBC,eAAe,EAAEL;AAClB,CAAC;AAED,MAAMM,WAAW,GAAGb,eAAe,CAAC;EACnCc,IAAI,EAAEf,WAAW;EACjB,CAACD,GAAG,CAACiB,WAAW,GAAGjB,GAAG,CAACkB;AACxB,CAAC,CAAC;AAEF,MAAMC,gBAAgB,GAAGd,cAAc,CACtCK,aAAa,EACbK,WACD,CAAC;AAED,MAAMK,KAAK,GAAGjB,cAAc,CAAC;EAC5Be,OAAO,EAAEC,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IAChCA,oBAAoB,CAAC;IACpBC,iBAAiB,EAAE;MAClBC,cAAc,EAAE,CAACjB,QAAQ,EAAEC,OAAO,EAAEF,KAAK;IAC1C;EACD,CAAC,CAAC,CAACmB,MAAM,CAACzB,GAAG,CAACqB,UAAU;AAC1B,CAAC,CAAC;AAIF,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}